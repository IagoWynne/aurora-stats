// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type DeleteResponse struct {
	ID      int64 `json:"id"`
	Success bool  `json:"success"`
}

type InsertResponse struct {
	ID int64 `json:"id"`
}

type Mutation struct {
}

type Person struct {
	ID        int64  `json:"id"`
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
}

type Query struct {
}

type VibeCheck struct {
	Date         time.Time         `json:"date"`
	Scores       []*VibeCheckScore `json:"scores"`
	AverageScore float64           `json:"averageScore"`
}

type VibeCheckInputScore struct {
	PersonID int64   `json:"personId"`
	Score    float64 `json:"score"`
}

type VibeCheckScore struct {
	ID     int64   `json:"id"`
	Person *Person `json:"person"`
	Score  float64 `json:"score"`
}

type WheelOption struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type WheelResult struct {
	ID     int64        `json:"id"`
	Date   time.Time    `json:"date"`
	Winner *Person      `json:"winner"`
	Prize  *WheelOption `json:"prize"`
}
