# https://gqlgen.com/getting-started/

scalar Time

type DeleteResponse {
  id: ID!
  success: Boolean!
}

type InsertResponse {
  id: ID!
}

# Options
type Person {
  id: ID!
  firstName: String!
  lastName: String!
}

type WheelOption {
  id: ID!
  name: String!
}

# Wheel Stats
type WheelResult {
  id: ID!
  date: Time!
  winner: Person!
  prize: WheelOption!
}

type Query {
  people: [Person!]!
  wheelOptions: [WheelOption!]!
  wheelResults(from: Time!, to: Time): [WheelResult!]!
}

type Mutation {
  createPerson(firstName: String!, lastName: String!): InsertResponse!
  deletePerson(id: ID!): DeleteResponse!
  addWheelOption(name: String!): InsertResponse!
  addWheelRun(date: Time!, winnerId: Int!, resultId: Int!): InsertResponse!
}
