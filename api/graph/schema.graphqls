# https://gqlgen.com/getting-started/

type DeleteResponse {
  id: ID!
  success: Boolean!
}

# Person management
type Person {
  id: ID!
  firstName: String!
  lastName: String!
}

# Wheel Stats
type WheelOption {
  id: ID!
  name: String!
}

type WheelResult {
  id: ID!
  date: String!
  optionId: Int!
  personId: Int!
}

type WheelWinStat {
  id: ID!
  date: String!
  winner: Person!
  prize: WheelOption!
}

type Query {
  people: [Person!]!
  wheelOptions: [WheelOption!]!
  wheelResults(from: String!, to: String): [WheelWinStat!]!
}

input AvailableOption {
  optionId: Int!
  count: Int!
}

type Mutation {
  createPerson(firstName: String!, lastName: String!): Person!
  deletePerson(id: ID!): DeleteResponse!
  addWheelOption(name: String!): WheelOption!
  addWheelRun(date: String!, winnerId: Int!, resultId: Int!): WheelResult!
}
